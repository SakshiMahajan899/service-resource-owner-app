version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: mongo-service
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: service_manager_dev
    volumes:
      - mongo-data:/data/db
      - ./init/init.js:/docker-entrypoint-initdb.d/init.js
    networks:
      - app-network

  backend-app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_MONGODB_URI=mongodb://admin:password@mongo-service:27017/service_manager_dev?authSource=admin

    depends_on:
      - mongodb
    networks:
      - app-network

  frontend-app:
    build:
      context: ./frontend  # Path to your Angular project root
      dockerfile: Dockerfile  # Youâ€™ll need to define this Dockerfile
    container_name: frontend-app
    ports:
      - "4200:80"  # Or "80:80" if using nginx
    depends_on:
      - backend-app
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:




##version: '3.8'
#
#services:
#
#  mongodb:
#    image: mongo:7.0
#    container_name: mongo-service
#    ports:
#      - "27017:27017"
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: admin
#      MONGO_INITDB_ROOT_PASSWORD: password
#    volumes:
#      - ./init/init.js:/docker-entrypoint-initdb.d/init.js
#
#  #
##
##  postgres:
##    image: postgres:15
##    container_name: postgres
##    environment:
##      POSTGRES_DB: flights-db
##      POSTGRES_USER: postgres
##      POSTGRES_PASSWORD: postgres
##    volumes:
##      - ./src/main/resources/flightdata_postgres.sql:/docker-entrypoint-initdb.d/flightdata_postgres.sql  # Init script
##    ports:
##      - "5432:5432"
##    networks:
##      - app-network
##
##
##  redis:
##    image: redis:latest
##    container_name: redis
##    ports:
##      - "6379:6379"
##    networks:
##      - app-network
##
#  application:
#    build:
#      context: ./backend
#      dockerfile: Dockerfile
#    container_name: backend-app
##    environment:
##      - SPRING_PROFILES_ACTIVE=docker
##      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/flightdb
##      - SPRING_DATASOURCE_USERNAME=flightuser
##      - SPRING_DATASOURCE_PASSWORD=flightpass
##      - SPRING_REDIS_HOST=redis
##      - SPRING_REDIS_PORT=6379
#    ports:
#      - "8080:8080"
#
#    environment:
#      - SPRING_PROFILES_ACTIVE=prod
#      - SPRING_DATA_MONGODB_URI=mongodb://admin:password@mongodb:27017/service_manager_dev
#    depends_on:
#      - mongodb
##    depends_on:
##      - postgres
##      - redis
#    networks:
#      - app-network
#
#networks:
#  app-network:
#    driver: bridge
